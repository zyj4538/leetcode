给定整数数组 nums 和整数 k，请返回数组中第 k 个最大的元素。
请注意，你需要找的是数组排序后的第 k 个最大的元素，而不是第 k 个不同的元素。
你必须设计并实现时间复杂度为 O(n) 的算法解决此问题。


代码：
class Solution {
public:
    int partition(vector<int>&nums, int l, int r) {
        int i = rand() % (r - l + 1) + l;
        swap(nums[i], nums[l]);
        int pivotkey = nums[l];
        while(l < r) {
            while(l < r && pivotkey >= nums[r]) r--;
            swap(nums[l], nums[r]);
            while(l < r && pivotkey <= nums[l]) l++;
            swap(nums[l], nums[r]);
        }
        return l;
    }
    int findKthLargest(vector<int>& nums, int k) {
        int left = 0, right = nums.size()-1;
        int index = partition(nums, left, right);
        while(index != k-1) {
            if(index < k-1) {
                left = index + 1;
            }
            else {
                right = index - 1;
            }
            index = partition(nums, left, right);
        }
        return nums[index];
    }
};